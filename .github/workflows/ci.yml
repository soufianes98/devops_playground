name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "assets/**"
      - "test/**"
      - "test_driver/**"
      - "integration_test/**"
      - ".github/**" # `/**` means Recursive
      - "screenshots/**"
      - "**.md"
      - "*.log"
      - ".gitignore"
      - ".gitattributes"
      - ".env.example"
      - "CODEOWNERS"
      - "LICENSE"
      - "design/**"
      - "screenshots/**"
      - "storybook/**"
      - ".vscode/**"
  pull_request:
    branches: 
      - main
      - develop
  workflow_dispatch: 
env:
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  GIT_AUTHOR_NAME: ${{ vars.GIT_AUTHOR_NAME }}
  GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
  USERNAME: ${{ github.repository_owner }}

jobs:
  # TODO: lint-job test-job build-job release-job deploy-job

  setup:
    runs-on: ubuntu-latest
    outputs:
      is_pre_release: ${{ steps.set_vars.outputs.is_pre_release}}
      latest_tag: ${{ steps.set_vars.outputs.latest_tag}}
      next_tag: ${{ steps.set_vars.outputs.next_tag}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup release
        id: set_vars
        run: |
          export REPOSITORY_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          chmod +x .github/scripts/main.sh
          .github/scripts/main.sh setup
      - name: Uploading changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: ${{ github.workspace }}
          retention-days: 1

  build:
    needs: setup
    # if: >-
      # # The following line is used to prevent forks from running this action
      # ${{ github.repository == 'soufianes98/devops_playground' }}
    name: Build artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        artifact: ["artifact1-v${{ needs.setup.outputs.next_tag }}.js", "artifact2-v${{ needs.setup.outputs.next_tag }}.txt"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create a directory
        run: mkdir -p ${{ github.workspace }}/build/artifacts

      - name: Build project
        run: echo 'Hello, World! This is an artifact!!!' > ${{ github.workspace }}/build/artifacts/${{ matrix.artifact }}

      - name: Uploading artifact ${{ matrix.artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ github.workspace }}/build/artifacts/${{ matrix.artifact }}

  test:
    needs: [setup, build]
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
          
      - name: Create a directory
        run: mkdir -p ${{ github.workspace }}/artifacts

      - name: Downloading artifact1
        uses: actions/download-artifact@v4
        with:
          name: "artifact1-v${{ needs.setup.outputs.next_tag }}.js"
          path: ${{ github.workspace }}/artifacts

      - name: Downloading artifact2
        uses: actions/download-artifact@v4
        with:
          name: "artifact2-v${{ needs.setup.outputs.next_tag }}.txt"
          path: ${{ github.workspace }}/artifacts

      - name: TODO
        run: |
          echo "TODO"

  release:
    if: success() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [setup, build, test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Downloading changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: ${{ github.workspace }}

      - name: Create a directory
        run: mkdir -p ${{ github.workspace }}/build/artifacts

      - name: Downloading artifact1
        uses: actions/download-artifact@v4
        with:
          name: "artifact1-v${{ needs.setup.outputs.next_tag }}.js"
          path: ${{ github.workspace }}/build/artifacts

      - name: Downloading artifact2
        uses: actions/download-artifact@v4
        with:
          name: "artifact2-v${{ needs.setup.outputs.next_tag }}.txt"
          path: ${{ github.workspace }}/build/artifacts

          # Run this command only when tests succeed or all jobs succeed
      - name: Release
        run: |
          export REPOSITORY_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          export next_tag="${{ needs.setup.outputs.next_tag }}"
          echo "next_tag=$next_tag"
          export is_pre_release="${{ needs.setup.outputs.is_pre_release }}"
          echo "is_pre_release=$is_pre_release" 
          export latest_tag="${{ needs.setup.outputs.latest_tag }}"
          echo "latest_tag=$latest_tag"

          ARTIFACTS_PATHS=(
            "${{ github.workspace }}/build/artifacts/artifact1-v$next_tag.js"
            "${{ github.workspace }}/build/artifacts/artifact2-v$next_tag.txt"
          )
                    
          # Verify artifacts exist before proceeding
          for artifact in "${ARTIFACTS_PATHS[@]}"; do
          if [ ! -f "$artifact" ]; then
          echo "::error::Artifact not found: $artifact"
              exit 1
            fi
          done
          
          # Join array elements with a delimiter (e.g., a comma) and export as environment variable
          export ARTIFACTS_PATHS_STR="${ARTIFACTS_PATHS[*]}"
          
          chmod +x .github/scripts/main.sh
          .github/scripts/main.sh publish

